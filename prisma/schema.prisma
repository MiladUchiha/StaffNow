// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email             String    @unique
  emailVerified     Boolean?   @default(false)
  emailVerificationToken String? @unique
  resetPasswordToken String? @unique
  resetPasswordTokenExpiry DateTime?
  hashedPassword          String    // You should hash and salt passwords for security
  bemanningsKonto            BemanningsKonto?
  bemannasKonto            BemannasKonto?
  // Add any other common fields for users
}


model BemanningsKonto {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  companyName   String
  organizationNumber  String
  address          String
  areas         String[]
  email         String @unique
  description        String
  branches          String[]
  crewNumber          String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  user             User      @relation(fields: [userId], references: [id])
  userId           String    @db.ObjectId @unique
} 
model BemannasKonto {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  companyName         String
  organizationNumber  String
  address             String
  email               String    @unique
  description         String
  branches            String[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  user                User      @relation(fields: [userId], references: [id])
  userId              String    @db.ObjectId @unique
  missions            Mission[] // Add this line to establish the relationship
}

model Mission {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  jobTitle       String
  payway        String
  priority      String
  area          String
  antalPersonal  String
  description    String
  startDate      String
  endDate        String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  done          Boolean   @default(false)

  bemannasKontoId     String    @db.ObjectId
  bemannasKonto       BemannasKonto @relation(fields: [bemannasKontoId], references: [id])
}
